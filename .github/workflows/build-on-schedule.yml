name: Build props (on schedule)

on:
  schedule:
    - cron: "*/59 * * * *"
  push: 
    branches:
      - main
      
jobs:
  setup:
    name: Setup environment
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
    steps:
      - name: Determine tag name
        id: get_tag_name
        run: |
          echo "tag_name=$(date '+%Y%m%d')" >> $GITHUB_OUTPUT

  build:
    name: Build props
    needs: setup
    strategy:
      matrix:
        # Devices to build props for
        device_name: [akita_beta15]

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install APT packages
        run: |
          sudo apt install -y dos2unix jq

      - name: Activate venv
        run: |
          python3.12 -m venv .venv/
          . .venv/bin/activate
          echo PATH=$PATH >> "$GITHUB_ENV"

      - name: Install payload_dumper
        run: pip install ./payload_dumper/

      - name: Make all scripts executable
        run: chmod +x *.sh 

      - name: Download latest OTA build for ${{ matrix.device_name }}
        run: ./download_latest_ota_build.sh ${{ matrix.device_name }}

      - name: Extract images and build
        id: extract_and_build
        run: ./extract_images.sh

      - name: Unzip
        run: unzip *.zip

      - name: Rename system.prop to build.prop
        run: mv system.prop build.prop

      - name: Remove previously committed files
        run: |
          git config --global user.name "daboynb"
          git config --global user.email "username@users.noreply.github.com"
          git rm -f pif.json spoof_build_vars || true
          git commit -m "Cleanup previous files" || true   
          git push
          
      - name: Generate PIF file
        run: ./generate_pif.sh 
        
      - name: Apply osmosis transformation
        run: ./migrate_osmosis.sh -i pif.json edited.json

      - name: Show contents of edited.json
        run: cat edited.json

      - name: Process edited.json to create edited_tricky.txt
        run: ./tricky.sh
         
      - name: Show contents of edited_tricky.txt
        run: cat edited_tricky.txt

      - name: Commit both edited.json and edited_tricky.txt to the repository
        run: |
          rm pif.json
          mv edited.json pif.json
          mv edited_tricky.txt spoof_build_vars
          git add pif.json spoof_build_vars
          git commit -m "Add edited.json and edited_tricky.txt for ${{ matrix.device_name }} on ${{ needs.setup.outputs.tag_name }}"
          git push
